import { Comment } from "../../entities/Comment";
import { Post } from "../../entities/Post";
import { UserLike } from "../../entities/UserLike";
import { getDatabase, ref, runTransaction } from "firebase/database";
import firebaseApp from "../../firebase";

export const ADD_POST = 'ADD_POST';
export const UPDATE_POSTS = 'UPDATE_POSTS'
export const POST_DETAILS = 'POST_DETAILS'


export const fetchPosts = () => {
    return async (dispatch: any, getState: any) => {
        const token = getState().user.idToken;

        const response = await fetch(
            'https://react-native-firebase-27cc0-default-rtdb.europe-west1.firebasedatabase.app/posts.json?auth=' + token, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });
    
        if (!response.ok) {
            alert("Problem loading posts")
        } else {
            const data = await response.json(); // json to javascript
            let posts: Post[] = []
            
            for (const PostKey in data) {
                // create Post objects and push them into the array posts.
                let objPost = data[PostKey];

                const comments : Comment[] = [];

                for (let key in objPost.comments) {
                    comments.push(objPost.comments[key]);
                }

                
                posts.push(new Post(objPost.title, 
                                    objPost.description, 
                                    objPost.timestamp, 
                                    objPost.userId, 
                                    objPost.userMail, 
                                    comments,
                                    objPost.numberOfLikes,
                                    objPost.userLikes,
                                    PostKey,
                                    objPost.photoUrl,
                                    objPost.displayName,
                                    ))
            }
            dispatch({ type: UPDATE_POSTS, payload: posts })
        }
    };
}


export const fetchPost = (postId: string) => {
    return async (dispatch: any, getState: any) => {
        const token = getState().user.idToken;

        const response = await fetch(
            'https://react-native-firebase-27cc0-default-rtdb.europe-west1.firebasedatabase.app/posts/' + postId  + '.json?auth=' + token, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });
    
        if (!response.ok) {
            alert("Problem loading post details")
        } else {
            const data = await response.json();

            let post = new Post(data.title, 
                                data.description, 
                                data.timestamp, 
                                data.userId, 
                                data.userMail, 
                                data.comments,
                                data.numberOfLikes,
                                data.userLikes,
                                postId,
                                data.photoUrl,
                                data.displayName,
                                )                                    
                dispatch({ type: POST_DETAILS, payload: post })                                                     
        }
    };
}


export const createPost = (title: string, description: string, currentDate: string, url: string) => {
    return async (dispatch: any, getState: any) => {
        const token = getState().user.idToken;
        const displayName = getState().user.loggedInUser.displayName       
        const userId = getState().user.localId;
        const userMail = getState().user.loggedInUser.email 

        const post: Post = new Post(title, 
                                    description, 
                                    currentDate, 
                                    userId,       // user ID 
                                    userMail,     // user Mail
                                    [],           // empty array for comments
                                    0,            // number of likes
                                    "undefined",  // user who likes post 
                                    "undefined",  // id generated by firebase
                                    url,  
                                    displayName,  // user DisplayName                             
        ); 

        if (!post.description || !post.title ) {
            return alert("Can't add an empty Title or empty Description")
        }
        else {
            const response = await fetch(
                'https://react-native-firebase-27cc0-default-rtdb.europe-west1.firebasedatabase.app/posts.json?auth=' + token, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(
                    post             
                )
            });

            if (!response.ok) {
                alert("Failed to create post")
            } 
            else {
                dispatch(fetchPosts())
            }
        };
    }
}


export const addLikeToPost = (postId: string) => {
    return async (dispatch: any, getState: any) => {
        const token = getState().user.idToken;
        const userMail = getState().user.loggedInUser.email 
        const userLike = new UserLike(userMail) 
        
        // Add userLike to post
        const responseUserLike = await fetch(
            'https://react-native-firebase-27cc0-default-rtdb.europe-west1.firebasedatabase.app/posts/'+ postId +'/userLikes.json?auth' + token, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
                body: JSON.stringify(
                    userLike            
                )
        });
        if (!responseUserLike.ok) {
            alert("Failed to add user to like")
        } 
        else {
            const db = getDatabase(firebaseApp);
            const postRef = ref(db, "posts/" + postId);

            await runTransaction(postRef, (post) => {
                if (post) {
                    post.numberOfLikes++;
                }

                return post;
            })

        }
        dispatch(fetchPost(postId))
        dispatch(fetchPosts()) 
    }
}


export const removeLikeFromPost = (postId: string) => {
    return async (dispatch: any, getState: any) => {
        const token = getState().user.idToken
        const userMail = getState().user.loggedInUser.email
        const userLike = new UserLike(userMail)   

        // Remove userLike from post
        const responseUserLike = await fetch(
            'https://react-native-firebase-27cc0-default-rtdb.europe-west1.firebasedatabase.app/posts/'+ postId +'/userLikes.json?auth' + token, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(
                userLike            
            )
        });
        if (!responseUserLike.ok) {
            alert("Failed to remove user from like")
        }    
        else {
            const db = getDatabase(firebaseApp);
            const postRef = ref(db, "posts/" + postId);
            
            await runTransaction(postRef, (post) => {
                if (post) {
                    post.numberOfLikes--;
                }

                return post;
            })
        }
        dispatch(fetchPost(postId));
        dispatch(fetchPosts()); 
    }
}
